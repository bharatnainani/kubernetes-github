name: Deployment Pipeline
run-name: "CICD deployed: @${{ github.actor }} üöÄ to ${{ github.event.inputs }} - Manual: ${{ github.event_name != 'push' }}. ‚≠ê"
on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      deployment-environment:
        type: choice
        description: Deployment Environment
        required: true
        default: staging
        options:
          - sandbox (not configured)
          - staging
          - morpheus-staging
          - prod (not configured)
env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  EKS_CLUSTER: ${{ secrets.EKS_CLUSTER }}
  EKS_REGION: ${{ secrets.EKS_REGION }}
jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      # Install kubectl
      - name: Install kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          curl -LO "https://dl.k8s.io/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl.sha256"
          echo "$(<kubectl.sha256) kubectl" | sha256sum --check
          sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
          kubectl version --client
      - name: Check AWS version
        run: |
          aws --version
          aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
          aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
          aws configure set region $EKS_REGION
          aws sts get-caller-identity
      # Connect to EKS cluster
      # - name: Connect to EKS cluster 
      #   run: aws eks --region $EKS_REGION update-kubeconfig --name $EKS_CLUSTER
      # # Build and deploy to EKS cluster
      # - name: Build and then deploy to EKS cluster with kubectl
      #   run: kubectl apply -f deploy.yaml
      # # Verify deployment
      # - name: Verify the deployment
      #   run: kubectl get pods
